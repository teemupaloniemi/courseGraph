import requests
import json
from bs4 import BeautifulSoup

module_names = ['etaka2020',
'etama2020',
'hiska2024',
'hisma2024',
'hiska2024',
'jouka2024',
'jouma2024',
'kimka2024',
'kimma2024',
'kopka2024sisu',
'kopma2024sisu',
'kirka2024',
'kirma2024',
'kirka2024',
'kikka2024',
'kumka2024',
'kumma2024',
'luomuska2024',
'luomusma2024',
'mokka2024sisu',
'mokma2024sisu',
'mslka2024',
'mslma2024',
'mkaka2024',
'mkama2024',
'mteka2024',
'muska2024',
'musma2024',
'stoka2024',
'stoma2024',
'stoka2024',
'stoma2024',
'taika2024',
'taima2024',
'taika2024',
'viska2024',
'visma2024',
'vikka2024',
'vikma2024',
'yfika2024',
'yfima2024',
'aikka2024',
'aikma2024',
'akima2024',
'arkma2020',
'etama2020',
'hisma2024',
'jouma2024',
'kimma2024',
'kopma2024sisu',
'kirma2024',
'kumma2024',
'kulma2024',
'musmp2023',
'deimp2024',
'lacmp2024',
'mokma2024sisu',
'mslma2024',
'mkama2024',
'musma2024',
'stoma2024',
'stoma2024',
'suoma2024',
'taima2024',
'visma2024',
'vikma2024',
'yfima2024',
'aikma2024',
'helto2024',
'kivto2024',
'mutto2024',
'solto2024',
'yfito2024',
'yfito2024',
'hytk_erillinen',
'hytk_erillinen',
'sosnet_verkosto',
'vav_verkosto',
'kls_exchange',
'kouma2024',
'tejka2024',
'tejma2024',
'tekka2024',
'tekma2024',
'tieka2024',
'tiema2024',
'kouma2024',
'tjtka2024',
'tjtma2024',
'kogma2024',
'kouma2024',
'kybma2024',
'ainmp2024',
'ainmp2024',
'hpcmp2024',
'insmp2024',
'tejma2024',
'tekma2024',
'tiema2024',
'tiema2024kyc',
'tjtma2024',
'tsama2024',
'itkto2024',
'itkto2024',
'triverkosto',
'kauka2024',
'kauma2024',
'kauka2024',
'talka2024',
'talma2024',
'kauma2024',
'bifmp2024',
'cemmp2024',
'dmcmp2024',
'ibemp2024',
'rmbmp2024',
'talma2024',
'kauto2024',
'talto2024',
'coop_verkosto',
'dgkaok',
'tutok',
'erika2024',
'erima2024',
'erika2024',
'kaika2024',
'kaima2024',
'kaika2024',
'laika2024',
'laima2024',
'luoka2024',
'luoma2024',
'psyka2024',
'psyma2024',
'psyka2024',
'psfma2024',
'veoka2024',
'veoma2024',
'varka2024',
'varma2024',
'varka2024',
'cvaka2024',
'erima2024',
'kaima2024',
'laima2024',
'luoma2024',
'neump2023',
'edsmp2024',
'ohjma2024',
'psyma2024',
'psfma2024',
'veoma2024',
'varma2024',
'kasto2024',
'kasto2024',
'konto2024',
'psyto2024',
'eoperi',
'eopveo',
'eoperi',
'vaakokeri',
'gptkok',
'lytka2024',
'lytma2024',
'lbika2024',
'bmema2024',
'lfyma2024',
'lpeka2024',
'lpema2024',
'ttika2024',
'terma2024',
'lltma2024',
'germa2024',
'ttika2024',
'valka2024',
'valma2024',
'ftema2024',
'germa2024',
'germaamk2024',
'lytma2024',
'bmema2024',
'lfyma2024',
'lltma2024',
'lltmaamk2024',
'lpema2024',
'lpama2024',
'ltema2024',
'bpamp2024',
'ppamp2024',
'terma2024',
'termaamk2024',
'teoma2024',
'valma2024',
'liito2024',
'lbito2024',
'terto2024',
'liiter_verkosto',
'ltk_erillinen',
'bioka2024',
'ekoma2024',
'smbma2024',
'fyaka2024',
'fyama2024',
'fyska2024',
'fysma2024',
'kemka2024',
'kemma2024',
'maaka2024',
'maama2024',
'matka2024',
'matma2024',
'lumoka2024',
'lumoma2024',
'nanka2024',
'nanmp2024',
'tilka2024',
'tilma2024',
'yveka2024',
'akvma2024',
'ympma2024',
'akvma2024',
'ekoma2024',
'fyama2024',
'fysma2024',
'kemma2024',
'besmp2024',
'cacemp2024',
'nanmp2024',
'phymp2024',
'radmp2021',
'maama2024',
'matma2024',
'smbma2024',
'tilma2024',
'ympma2024',
'bento2024',
'fysto2024',
'kemto2024',
'matto2024',
'eco_winter',
'mltk_fitechkok',
'mltk_fitechkok',
'fyskem_verkosto',
'ujk_verkosto',
'preintegra',
]

modules = []

for name in module_names:

	module = {"module": "", "codes": []}

	url = f"https://opinto-opas.jyu.fi/2024/fi/tutkintoohjelma/{name}/"
	response = requests.get(url)
	html_content = response.text

	soup = BeautifulSoup(html_content, 'html.parser')
	accordion_items = soup.find_all('div', {'data-accordion-component': 'AccordionItem'})

	course_codes = []

	module['codes'] = course_codes
	module['module'] = name

	for item in accordion_items:

	    link = item.find('a')

	    if link and 'href' in link.attrs:

	        course_code = link['href'].split('/')[-2]  # assuming course code is in the second last segment
	        course_codes.append(course_code.upper())

	modules.append(module)

with open("modules.json", "w") as outfile:

    outfile.write(json.dumps(modules, indent=4))
